name: Module CI/CD

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install dependencies
        run: npm ci

      # run our gulp build action
      - name: Build dist directory
        run: npm run build

      # create a zip file with all files required by the module to add to the release
      - name: Zip Files
        working-directory: ./dist
        run: zip -r ./module.zip ./*

      # Get the version from 'module.json'
      - name: Get Version
        shell: bash
        id: get-version
        run: echo "::set-output name=version::$(node ./.github/workflows/get-version.js)"

      # Create a release for this specific version
      - name: Create Release
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # set this to false if you want to prevent updating existing releases
          name: ${{ steps.get-version.outputs.version }}
          body: |
            ${{ steps.changelog.outputs.clean_changelog }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './dist/module.json,./dist/module.zip'
          tag_name: ${{ steps.get-version.outputs.version }}

      # Publish this new version to the Foundry VTT Module Listing
      - name: FoundryVTT AutoPublish
        uses: Varriount/fvtt-autopublish@v1.0.0
        with:
          username: ${{ secrets.FOUNDRY_ADMIN_USER }}
          password: ${{ secrets.FOUNDRY_ADMIN_PW }}
          module-id: 719
          manifest-url: https://github.com/ElfFriend-DnD/foundryvtt-gmScreen/releases/download/${{ steps.get-version.outputs.version }}/module.json
          manifest-file: src/module.json
